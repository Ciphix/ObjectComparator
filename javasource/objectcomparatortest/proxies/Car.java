// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package objectcomparatortest.proxies;

public class Car
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject carMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "ObjectComparatorTest.Car";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IdCar("IdCar"),
		Brand("Brand"),
		NrOfWheels("NrOfWheels"),
		Engine("Engine"),
		Model("Model"),
		Car_Driver("ObjectComparatorTest.Car_Driver"),
		Car_Garage("ObjectComparatorTest.Car_Garage"),
		Car_Tyre("ObjectComparatorTest.Car_Tyre");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Car(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Car(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject carMendixObject)
	{
		if (carMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, carMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.carMendixObject = carMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Car.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static objectcomparatortest.proxies.Car initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return objectcomparatortest.proxies.Car.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static objectcomparatortest.proxies.Car initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new objectcomparatortest.proxies.Car(context, mendixObject);
	}

	public static objectcomparatortest.proxies.Car load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return objectcomparatortest.proxies.Car.initialize(context, mendixObject);
	}

	public static java.util.List<objectcomparatortest.proxies.Car> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> objectcomparatortest.proxies.Car.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of IdCar
	 */
	public final java.lang.Long getIdCar()
	{
		return getIdCar(getContext());
	}

	/**
	 * @param context
	 * @return value of IdCar
	 */
	public final java.lang.Long getIdCar(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.IdCar.toString());
	}

	/**
	 * Set value of IdCar
	 * @param idcar
	 */
	public final void setIdCar(java.lang.Long idcar)
	{
		setIdCar(getContext(), idcar);
	}

	/**
	 * Set value of IdCar
	 * @param context
	 * @param idcar
	 */
	public final void setIdCar(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long idcar)
	{
		getMendixObject().setValue(context, MemberNames.IdCar.toString(), idcar);
	}

	/**
	 * @return value of Brand
	 */
	public final java.lang.String getBrand()
	{
		return getBrand(getContext());
	}

	/**
	 * @param context
	 * @return value of Brand
	 */
	public final java.lang.String getBrand(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Brand.toString());
	}

	/**
	 * Set value of Brand
	 * @param brand
	 */
	public final void setBrand(java.lang.String brand)
	{
		setBrand(getContext(), brand);
	}

	/**
	 * Set value of Brand
	 * @param context
	 * @param brand
	 */
	public final void setBrand(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String brand)
	{
		getMendixObject().setValue(context, MemberNames.Brand.toString(), brand);
	}

	/**
	 * @return value of NrOfWheels
	 */
	public final java.lang.Integer getNrOfWheels()
	{
		return getNrOfWheels(getContext());
	}

	/**
	 * @param context
	 * @return value of NrOfWheels
	 */
	public final java.lang.Integer getNrOfWheels(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.NrOfWheels.toString());
	}

	/**
	 * Set value of NrOfWheels
	 * @param nrofwheels
	 */
	public final void setNrOfWheels(java.lang.Integer nrofwheels)
	{
		setNrOfWheels(getContext(), nrofwheels);
	}

	/**
	 * Set value of NrOfWheels
	 * @param context
	 * @param nrofwheels
	 */
	public final void setNrOfWheels(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer nrofwheels)
	{
		getMendixObject().setValue(context, MemberNames.NrOfWheels.toString(), nrofwheels);
	}

	/**
	 * @return value of Engine
	 */
	public final java.lang.String getEngine()
	{
		return getEngine(getContext());
	}

	/**
	 * @param context
	 * @return value of Engine
	 */
	public final java.lang.String getEngine(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Engine.toString());
	}

	/**
	 * Set value of Engine
	 * @param engine
	 */
	public final void setEngine(java.lang.String engine)
	{
		setEngine(getContext(), engine);
	}

	/**
	 * Set value of Engine
	 * @param context
	 * @param engine
	 */
	public final void setEngine(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String engine)
	{
		getMendixObject().setValue(context, MemberNames.Engine.toString(), engine);
	}

	/**
	 * @return value of Model
	 */
	public final java.lang.String getModel()
	{
		return getModel(getContext());
	}

	/**
	 * @param context
	 * @return value of Model
	 */
	public final java.lang.String getModel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Model.toString());
	}

	/**
	 * Set value of Model
	 * @param model
	 */
	public final void setModel(java.lang.String model)
	{
		setModel(getContext(), model);
	}

	/**
	 * Set value of Model
	 * @param context
	 * @param model
	 */
	public final void setModel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String model)
	{
		getMendixObject().setValue(context, MemberNames.Model.toString(), model);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Car_Driver
	 */
	public final java.util.List<objectcomparatortest.proxies.Driver> getCar_Driver() throws com.mendix.core.CoreException
	{
		return getCar_Driver(getContext());
	}

	/**
	 * @param context
	 * @return value of Car_Driver
	 * @throws com.mendix.core.CoreException
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<objectcomparatortest.proxies.Driver> getCar_Driver(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<objectcomparatortest.proxies.Driver> result = new java.util.ArrayList<>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Car_Driver.toString());
		if (valueObject == null) {
			return result;
		}
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject)) {
			result.add(objectcomparatortest.proxies.Driver.initialize(context, mendixObject));
		}
		return result;
	}

	/**
	 * Set value of Car_Driver
	 * @param car_driver
	 */
	public final void setCar_Driver(java.util.List<objectcomparatortest.proxies.Driver> car_driver)
	{
		setCar_Driver(getContext(), car_driver);
	}

	/**
	 * Set value of Car_Driver
	 * @param context
	 * @param car_driver
	 */
	public final void setCar_Driver(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<objectcomparatortest.proxies.Driver> car_driver)
	{
		var identifiers = car_driver
			.stream()
			.map(proxyObject -> proxyObject.getMendixObject().getId())
			.collect(java.util.stream.Collectors.toList());
		
		getMendixObject().setValue(context, MemberNames.Car_Driver.toString(), identifiers);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Car_Garage
	 */
	public final objectcomparatortest.proxies.Garage getCar_Garage() throws com.mendix.core.CoreException
	{
		return getCar_Garage(getContext());
	}

	/**
	 * @param context
	 * @return value of Car_Garage
	 * @throws com.mendix.core.CoreException
	 */
	public final objectcomparatortest.proxies.Garage getCar_Garage(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		objectcomparatortest.proxies.Garage result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Car_Garage.toString());
		if (identifier != null) {
			result = objectcomparatortest.proxies.Garage.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Car_Garage
	 * @param car_garage
	 */
	public final void setCar_Garage(objectcomparatortest.proxies.Garage car_garage)
	{
		setCar_Garage(getContext(), car_garage);
	}

	/**
	 * Set value of Car_Garage
	 * @param context
	 * @param car_garage
	 */
	public final void setCar_Garage(com.mendix.systemwideinterfaces.core.IContext context, objectcomparatortest.proxies.Garage car_garage)
	{
		if (car_garage == null) {
			getMendixObject().setValue(context, MemberNames.Car_Garage.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Car_Garage.toString(), car_garage.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Car_Tyre
	 */
	public final objectcomparatortest.proxies.Tyre getCar_Tyre() throws com.mendix.core.CoreException
	{
		return getCar_Tyre(getContext());
	}

	/**
	 * @param context
	 * @return value of Car_Tyre
	 * @throws com.mendix.core.CoreException
	 */
	public final objectcomparatortest.proxies.Tyre getCar_Tyre(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		objectcomparatortest.proxies.Tyre result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Car_Tyre.toString());
		if (identifier != null) {
			result = objectcomparatortest.proxies.Tyre.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Car_Tyre
	 * @param car_tyre
	 */
	public final void setCar_Tyre(objectcomparatortest.proxies.Tyre car_tyre)
	{
		setCar_Tyre(getContext(), car_tyre);
	}

	/**
	 * Set value of Car_Tyre
	 * @param context
	 * @param car_tyre
	 */
	public final void setCar_Tyre(com.mendix.systemwideinterfaces.core.IContext context, objectcomparatortest.proxies.Tyre car_tyre)
	{
		if (car_tyre == null) {
			getMendixObject().setValue(context, MemberNames.Car_Tyre.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Car_Tyre.toString(), car_tyre.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return carMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final objectcomparatortest.proxies.Car that = (objectcomparatortest.proxies.Car) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
